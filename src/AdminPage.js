import React, { useState, useEffect } from "react";
import { db } from "./firebaseConfig";
import { collection, getDocs, deleteDoc, doc, updateDoc } from "firebase/firestore";
import './AdminPage.css';
import axios from "axios";
const AdminDashboard = () => {
    const [bookings, setBookings] = useState([]);
    const [search, setSearch] = useState("");
    const [editMode, setEditMode] = useState(false); // ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏•‡∏±‡∏ö‡πÇ‡∏´‡∏°‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
    const [currentBooking, setCurrentBooking] = useState({}); // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç

    useEffect(() => {
        fetchBookings();
    }, []);

    const fetchBookings = async () => {
        const querySnapshot = await getDocs(collection(db, "bookings"));
        const data = querySnapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() }));
        setBookings(data);
    };

    const handleEdit = (booking) => {
        setCurrentBooking(booking);
        setEditMode(true); // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÇ‡∏´‡∏°‡∏î‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
    };

    const handleDelete = async (id) => {
        if (!window.confirm("‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ô‡∏µ‡πâ?")) return;
    
        // ‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á
        await deleteDoc(doc(db, "bookings", id));
    
        // ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô Line
        const text = `üö® *‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á* üö®\n\n‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö:\n\nüÜî *ID ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á:* ${id}\n\n‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö üîç`;
    
        try {
            console.log("üì§ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô LINE...");
            await axios.post("http://localhost:5000/send-line-notify", { message: text });
            console.log("‚úÖ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô LINE ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
        } catch (error) {
            console.error("‚ùå ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", error);
        }
    
        alert("‚úÖ ‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
        fetchBookings(); // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà
    };
    
    const handleUpdate = async (e) => {
        e.preventDefault();
    
        const { id, name, phone, barber, date, time } = currentBooking;
    
        if (!name || !phone || !barber || !date || !time) {
            alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô");
            return;
        }
    
        // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á
        const bookingRef = doc(db, "bookings", id);
        await updateDoc(bookingRef, {
            name,
            phone,
            barber,
            date,
            time,
        });
    
        // ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô Line
        const text = `‚úèÔ∏è *‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á* ‚úèÔ∏è\n\nüìå *‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤:* ${name}\nüìû *‡πÄ‡∏ö‡∏≠‡∏£‡πå:* ${phone}\nüíà *‡∏ä‡πà‡∏≤‡∏á:* ${barber}\nüìÖ *‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:* ${date}\nüïí *‡πÄ‡∏ß‡∏•‡∏≤:* ${time}\n\n‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á üîç`;
    
        try {
            console.log("üì§ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô LINE...");
            await axios.post("http://localhost:5000/send-line-notify", { message: text });
            console.log("‚úÖ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô LINE ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
        } catch (error) {
            console.error("‚ùå ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", error);
        }
    
        alert("‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
        setEditMode(false); // ‡∏õ‡∏¥‡∏î‡πÇ‡∏´‡∏°‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
        fetchBookings(); // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà
    };
    
    const handleChange = (e) => {
        const { name, value } = e.target;
        setCurrentBooking((prev) => ({
            ...prev,
            [name]: value,
        }));
    };

    const filteredBookings = bookings.filter((b) =>
        b.name.includes(search) || b.phone.includes(search) || b.barber.includes(search)
    );

    return (
        <div className="container mx-auto p-4">
            <h1 className="text-2xl font-bold mb-4">üìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</h1>
            <input
                type="text"
                placeholder="üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ï‡∏≤‡∏°‡∏ä‡∏∑‡πà‡∏≠, ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£ ‡∏´‡∏£‡∏∑‡∏≠‡∏ä‡πà‡∏≤‡∏á"
                value={search}
                onChange={(e) => setSearch(e.target.value)}
                className="border p-2 w-full mb-4"
            />

            {editMode && (
                <div className="mb-4 p-4 border border-gray-300 rounded bg-gray-50">
                    <h2 className="text-xl font-semibold mb-4">‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á</h2>
                    <form onSubmit={handleUpdate}>
                        <input
                            type="text"
                            name="name"
                            value={currentBooking.name || ""}
                            onChange={handleChange}
                            placeholder="‡∏ä‡∏∑‡πà‡∏≠"
                            className="border p-2 w-full mb-4"
                        />
                        <input
                            type="text"
                            name="phone"
                            value={currentBooking.phone || ""}
                            onChange={handleChange}
                            placeholder="‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£"
                            className="border p-2 w-full mb-4"
                        />
                        <input
                            type="text"
                            name="barber"
                            value={currentBooking.barber || ""}
                            onChange={handleChange}
                            placeholder="‡∏ä‡πà‡∏≤‡∏á"
                            className="border p-2 w-full mb-4"
                        />
                        <input
                            type="date"
                            name="date"
                            value={currentBooking.date || ""}
                            onChange={handleChange}
                            className="border p-2 w-full mb-4"
                        />
                        <input
                            type="time"
                            name="time"
                            value={currentBooking.time || ""}
                            onChange={handleChange}
                            className="border p-2 w-full mb-4"
                        />
                        <button type="submit" className="bg-blue-500 text-white px-4 py-2 rounded">
                            ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
                        </button>
                        <button
                            type="button"
                            onClick={() => setEditMode(false)}
                            className="ml-2 bg-gray-500 text-white px-4 py-2 rounded"
                        >
                            ‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
                        </button>
                    </form>
                </div>
            )}

            <table className="w-full border-collapse border border-gray-300">
                <thead>
                    <tr className="bg-gray-200">
                        <th className="border p-2">‡∏ä‡∏∑‡πà‡∏≠</th>
                        <th className="border p-2">‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£</th>
                        <th className="border p-2">‡∏ä‡πà‡∏≤‡∏á</th>
                        <th className="border p-2">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</th>
                        <th className="border p-2">‡πÄ‡∏ß‡∏•‡∏≤</th>
                        <th className="border p-2">‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</th>
                    </tr>
                </thead>
                <tbody>
                    {filteredBookings.map((booking) => (
                        <tr key={booking.id} className="border">
                            <td className="p-2">{booking.name}</td>
                            <td className="p-2">{booking.phone}</td>
                            <td className="p-2">{booking.barber}</td>
                            <td className="p-2">{booking.date}</td>
                            <td className="p-2">{booking.time}</td>
                            <td className="p-2">
                                <button
                                    className="bg-yellow-500 text-white px-3 py-1 rounded"
                                    onClick={() => handleEdit(booking)}
                                >
                                    ‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
                                </button>
                                <button
                                    className="bg-red-500 text-white px-3 py-1 rounded ml-2"
                                    onClick={() => handleDelete(booking.id)}
                                >
                                    ‚ùå ‡∏•‡∏ö
                                </button>
                            </td>
                        </tr>
                    ))}
                </tbody>
            </table>
        </div>
    );
};

export default AdminDashboard;
